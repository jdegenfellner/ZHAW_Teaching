#  summarise(Wochenarbeitszeiten_ohne_Pausen = sum(Dauer_ohne_Pausen)/60)
# __Weekend hours ----------------------------------------------------------------
#ze %>% group_by(KW) %>%
#  filter(Wochentag_label %in% c("Sat","Sun")) %>%
#  summarise(Wochenende_Arbeitszeiten_ohne_Pausen = sum(Dauer_ohne_Pausen)/60)
# __Monthly h, Mo-Fr--------------------------------------------------------------
# __Monthly h, Sat/Sun------------------------------------------------------------
# __Daily h, by ILV Bereich-------------------------------------------------------
# check for overlapping times!
# BOOKING in Pro-Time -----
df <- ze %>% filter(Taetigkeit_allg != "Mittag", Taetigkeit_allg != "Pause") %>%
group_by(Taetigkeit_allg) %>%
summarise(Tagesarbeitszeit_ohne_Pausen = sum(Dauer_ohne_Pausen, na.rm = TRUE)/60)
filename <- paste0("summary_", paste0(sheets,collapse = "_"), ".xlsx")
write_xlsx(df, filename)
# total_work_time current month
ze %>% group_by(Taetigkeit_allg) %>%
summarise(Tagesarbeitszeit_ohne_Pausen = sum(Dauer_ohne_Pausen, na.rm = TRUE)/60) %>%
summarise(total_work_time = sum(Tagesarbeitszeit_ohne_Pausen))
# World Bubble
#devtools::install_github("ifellows/wordcloud")
#library(worldcloud)
data <- import("CRF_performance_data_csv.csv")
summary(data)
library(rio)
library(tidyverse)
library(psych)
# Set working directory to source file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- import("CRF_performance_data_csv.csv")
summary(data)
View(data)
sum(is.na(data)) # 0
## Set categorical data as factors
data$sex <- factor(data$sex, levels = c(0,1), labels = c("w", "m"))
table(data$sex)
data$levelOfSport <- factor(data$levelOfSport, levels = c(1,2,3), labels = c("amateur", "competitive", "top"))
table(data$levelOfSport)
data$test_1 <- factor(data$test_1, levels = c(0,1), labels = c("MAT", "IAT"))
table(data$test_1)
data$test_2 <- factor(data$test_2, levels = c(0,1), labels = c("MAT", "IAT"))
table(data$test_2)
#create col diff_MAT
data$diff_MAT <- data$MAT_1 - data$MAT_2
## data long
data_long <- data %>%
dplyr::select(MAT_1, MAT_2, IAT_1, IAT_2, mean_MAT, mean_IAT) %>%
pivot_longer(everything(), names_to = "testName",  values_to = "result")
data_long
data
?pivot_longer
data_long
unique(data_long$testName)
## data for men and women separated
data_w <- data %>% filter(sex == "w")
data_m <- data %>% filter(sex == "m")
# age
mean_age <- round(mean(data$age),1)
mean_age_sd <- round(sd(data$age, na.rm = TRUE),1)
#height
mean_height <- round(mean(data$height_cm),1)
mean_height_sd <- round(sd(data$height_cm, na.rm = TRUE),1)
#body mass
mean_bodyMass <- round(mean(data$bodyMass_kg),1)
mean_bodyMass_sd <- round(sd(data$bodyMass_kg, na.rm = TRUE),1)
##bmi
mean_bmi <- round(mean(data$bmi),1)
mean_bmi_sd <- round(sd(data$bmi, na.rm = TRUE),1)
#age
age_sex <- data %>% group_by(sex) %>% summarise_at(vars(age), list(mean = mean, sd = sd)) %>% as.data.frame()
round(age_sex$mean,1)
round(age_sex$sd,1)
#height
height_sex <- data %>%  group_by(sex) %>% summarise_at(vars(height_cm), list(mean = mean, sd = sd)) %>% as.data.frame()
round(height_sex$mean,1)
round(height_sex$sd,1)
#body mass
bodymass_sex <- data %>%  group_by(sex) %>% summarise_at(vars(bodyMass_kg), list(mean = mean, sd = sd)) %>% as.data.frame()
round(bodymass_sex$mean,1)
round(bodymass_sex$sd,1)
#bmi
bmi_sex <- data %>%  group_by(sex) %>% summarise_at(vars(bmi), list(mean = mean, sd = sd)) %>% as.data.frame()
round(bmi_sex$mean,1)
round(bmi_sex$sd,1)
##plots n-structure
boxplot(data$bmi, xlab = "BMI")
hist(data$age, probability = TRUE)
boxplot(data$age, xlab = "age") # outlier, should at least be mentioned somehwere.
# one could also try to do the analysis without this subject and see what changes.
which(data$age > 60) # participant 6
barplot(table(data$sex, data$levelOfSport), legend = TRUE, xlab = "Level of sport")
## MAT results: mean and SD and mean difference
mean_MAT_1 <- round(mean(data$MAT_1),2) #mean of MAT_1
sd_MAT_1 <- round(sd(data$MAT_1),2) #SD of MAT_1
mean_MAT_2 <- round(mean(data$MAT_2),2) #mean of MAT_2
sd_MAT_2 <- round(sd(data$MAT_2),2) #SD of MAT_2
mean_diff_MAT <- round(mean(data$diff_MAT),2) # mean of MAT_difference
sd_diff_MAT <- round(sqrt(sd(data$MAT_1)^2 + sd(data$MAT_2)^2),2) # SD of mean difference MAT
# MAT_1 mean and sd by sex
mean_MAT_1 <- data %>%  group_by(sex) %>% summarise_at(vars(MAT_1), list(mean = mean, sd = sd)) %>% as.data.frame()
round(mean_MAT_1$mean,2)
round(mean_MAT_1$sd,2)
# MAT_2 mean and sd by sex
mean_MAT_2 <- data %>%  group_by(sex) %>% summarise_at(vars(MAT_2), list(mean = mean, sd = sd)) %>% as.data.frame()
round(mean_MAT_2$mean,2)
round(mean_MAT_2$sd,2)
# MAT_diff (mean and sd) by sex
mean_diff_MAT_m <- round(mean(data$MAT_1[data$sex == "w"])-mean(data$MAT_2[data$sex == "w"]),2)  ## mean difference of MAT for women
sd_diff_MAT_m <- round(sqrt(sd(data$MAT_1[data$sex == "w"])^2 + sd(data$MAT_2[data$sex == "w"])^2),2) # SD of mean difference of MAT for women
mean_diff_MAT_m <- round(mean(data$MAT_1[data$sex == "m"])-mean(data$MAT_2[data$sex == "m"]),2) ## mean difference of MAT for men
# MAT_diff (mean and sd) by sex
mean_diff_MAT_m <- round(mean(data$MAT_1[data$sex == "w"]) - mean(data$MAT_2[data$sex == "w"]),2)  ## mean difference of MAT for women
sd_diff_MAT_m <- round(sqrt(sd(data$MAT_1[data$sex == "w"])^2 + sd(data$MAT_2[data$sex == "w"])^2),2) # SD of mean difference of MAT for women
mean_diff_MAT_m <- round(mean(data$MAT_1[data$sex == "m"]) - mean(data$MAT_2[data$sex == "m"]),2) ## mean difference of MAT for men
sd_diff_MAT_m <- round(sqrt(sd(data$MAT_1[data$sex == "m"])^2 + sd(data$MAT_2[data$sex == "m"])^2),2)
## ICC
ICC(data[c("MAT_1", "MAT_2")]) #ICC MAT for all n
library(ggplot2)
ggplot(data, aes(x = mean_MAT, y = diff_MAT)) +
geom_point(size=2) +
geom_hline(yintercept = mean_diff_MAT) +
geom_hline(yintercept = LOA_MAT_CI_lower, color = "red", linetype="dashed") +
geom_hline(yintercept = LOA_MAT_CI_upper, color = "red", linetype="dashed") +
ggtitle("Bland-Altman Plot of MAT") +
ylab("Difference Between Measurements") +
xlab("Average Measurement") +
coord_cartesian(xlim = c(5, 8), ylim = c(-1, 1)) +
theme(plot.title = element_text(hjust = 0.5)) # zentrieren
ICC(data_m[c("MAT_1","MAT_2")]) #ICC of MAT for men
ICC(data[c("IAT_1", "IAT_2")]) # ICC IAT
##PPMCC
plot(data$mean_IAT, data$mean_MAT) # auch ansehen...
cor.test(data$mean_IAT, data$mean_MAT, use = "pairwise.complete.obs", method = "pearson")
## 95% limit of agreement (LOA) of MAT - absolute reliability
LOA_MAT_CI_lower <- round(mean(data$diff_MAT) - 1.96*sd(data$diff_MAT),2) # 95LOA lower confidence interval
LOA_MAT_CI_upper <- round(mean(data$diff_MAT) + 1.96*sd(data$diff_MAT),2) # 95%LOA upper confidence interval
LOA_MAT_CI_lower_m <- round(mean(data_m$diff_MAT) - 1.96*sd(data_m$diff_MAT),2) # 95&LOA lower CI for men
LOA_MAT_CI_upper_m <- round(mean(data_m$diff_MAT) + 1.96*sd(data_m$diff_MAT),2) # 95%LOA upper CI for men
LOA_MAT_CI_lower_w <- round(mean(data_w$diff_MAT) - 1.96*sd(data_w$diff_MAT),2) # 95&LOA lower CI for women
LOA_MAT_CI_upper_w <- round(mean(data_w$diff_MAT) + 1.96*sd(data_w$diff_MAT),2) # 95%LOA upper CI for women
library(ggplot2)
ggplot(data, aes(x = mean_MAT, y = diff_MAT)) +
geom_point(size=2) +
geom_hline(yintercept = mean_diff_MAT) +
geom_hline(yintercept = LOA_MAT_CI_lower, color = "red", linetype="dashed") +
geom_hline(yintercept = LOA_MAT_CI_upper, color = "red", linetype="dashed") +
ggtitle("Bland-Altman Plot of MAT") +
ylab("Difference Between Measurements") +
xlab("Average Measurement") +
coord_cartesian(xlim = c(5, 8), ylim = c(-1, 1)) +
theme(plot.title = element_text(hjust = 0.5)) # zentrieren
## t-Test MAT
t.test(data$MAT_1, data$MAT_2)
## t-Test MAT
t.test(data$MAT_1, data$MAT_2)
data[c("MAT_1", "MAT_2")]
getwd()
summary(data)
View(data)
# Set working directory to source file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- import("CRF_performance_data_csv.csv")
summary(data)
View(data)
## Set categorical data as factors
data$sex <- factor(data$sex, levels = c(0,1), labels = c("w", "m"))
table(data$sex)
data$levelOfSport <- factor(data$levelOfSport, levels = c(1,2,3), labels = c("amateur", "competitive", "top"))
table(data$levelOfSport)
data$test_1 <- factor(data$test_1, levels = c(0,1), labels = c("MAT", "IAT"))
table(data$test_1)
data$test_2 <- factor(data$test_2, levels = c(0,1), labels = c("MAT", "IAT"))
table(data$test_2)
#create col diff_MAT
data$diff_MAT <- data$MAT_1 - data$MAT_2
## data long
data_long <- data %>%
dplyr::select(MAT_1, MAT_2, IAT_1, IAT_2, mean_MAT, mean_IAT) %>%
pivot_longer(everything(), names_to = "testName",  values_to = "result")
head(data_long)
## data for men and women separated
data_w <- data %>% filter(sex == "w")
data_m <- data %>% filter(sex == "m")
# age
mean_age <- round(mean(data$age),1)
mean_age_sd <- round(sd(data$age, na.rm = TRUE),1)
#height
mean_height <- round(mean(data$height_cm),1)
mean_height_sd <- round(sd(data$height_cm, na.rm = TRUE),1)
#body mass
mean_bodyMass <- round(mean(data$bodyMass_kg),1)
mean_bodyMass_sd <- round(sd(data$bodyMass_kg, na.rm = TRUE),1)
##bmi
mean_bmi <- round(mean(data$bmi),1)
mean_bmi_sd <- round(sd(data$bmi, na.rm = TRUE),1)
# age
(mean_age <- round(mean(data$age),1))
#height
mean_height <- round(mean(data$height_cm),1)
mean_height_sd <- round(sd(data$height_cm, na.rm = TRUE),1)
#body mass
mean_bodyMass <- round(mean(data$bodyMass_kg),1)
mean_bodyMass_sd <- round(sd(data$bodyMass_kg, na.rm = TRUE),1)
##bmi
mean_bmi <- round(mean(data$bmi),1)
mean_bmi_sd <- round(sd(data$bmi, na.rm = TRUE),1)
#age
age_sex <- data %>% group_by(sex) %>% summarise_at(vars(age), list(mean = mean, sd = sd)) %>% as.data.frame()
round(age_sex$mean,1)
round(age_sex$sd,1)
#height
height_sex <- data %>%  group_by(sex) %>% summarise_at(vars(height_cm), list(mean = mean, sd = sd)) %>% as.data.frame()
round(height_sex$mean,1)
round(height_sex$sd,1)
#body mass
bodymass_sex <- data %>%  group_by(sex) %>% summarise_at(vars(bodyMass_kg), list(mean = mean, sd = sd)) %>% as.data.frame()
round(bodymass_sex$mean,1)
round(bodymass_sex$sd,1)
library(knitr)
data <- data.frame(
Name = c("John", "Jane", "Jim"),
Age = c(25, 30, 35),
Gender = c("Male", "Female", "Male")
)
kable(data, caption = "Table 1: Personal Information", align = "c")
flextable(kable(data, caption = "Table 1: Personal Information", align = "c"))
library(flextable)
data <- data.frame(
Name = c("John", "Jane", "Jim"),
Age = c(25, 30, 35),
Gender = c("Male", "Female", "Male")
)
flextable(kable(data, caption = "Table 1: Personal Information", align = "c"))
flextable(data, caption = "Table 1: Personal Information", align = "c")
flextable(data)
data %>% filter(sex == "w") %>% mutate(sd_diff_MAT_m = sd(MAT_1 - MAT_2))
data
# Set working directory to source file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- import("CRF_performance_data_csv.csv")
summary(data)
View(data)
sum(is.na(data)) # 0
## Set categorical data as factors
data$sex <- factor(data$sex, levels = c(0,1), labels = c("w", "m"))
table(data$sex)
data$levelOfSport <- factor(data$levelOfSport, levels = c(1,2,3), labels = c("amateur", "competitive", "top"))
table(data$levelOfSport)
data$test_1 <- factor(data$test_1, levels = c(0,1), labels = c("MAT", "IAT"))
table(data$test_1)
data$test_2 <- factor(data$test_2, levels = c(0,1), labels = c("MAT", "IAT"))
table(data$test_2)
#create col diff_MAT
data$diff_MAT <- data$MAT_1 - data$MAT_2
## data for men and women separated
data_w <- data %>% filter(sex == "w")
data_m <- data %>% filter(sex == "m")
# age
(mean_age <- round(mean(data$age),1))
mean_age_sd <- round(sd(data$age, na.rm = TRUE),1)
#height
mean_height <- round(mean(data$height_cm),1)
mean_height_sd <- round(sd(data$height_cm, na.rm = TRUE),1)
#body mass
mean_bodyMass <- round(mean(data$bodyMass_kg),1)
mean_bodyMass_sd <- round(sd(data$bodyMass_kg, na.rm = TRUE),1)
##bmi
mean_bmi <- round(mean(data$bmi),1)
mean_bmi_sd <- round(sd(data$bmi, na.rm = TRUE),1)
#age
age_sex <- data %>% group_by(sex) %>% summarise_at(vars(age), list(mean = mean, sd = sd)) %>% as.data.frame()
round(age_sex$mean,1)
round(age_sex$sd,1)
data %>% filter(sex == "w") %>% mutate(sd_diff_MAT_m = sd(MAT_1 - MAT_2))
(sd_diff_MAT_m <- sd(data$MAT_1[data$sex == "w"] - data$MAT_2[data$sex == "w"]))
#data %>% filter(sex == "w") %>% mutate(sd_diff_MAT_m = sd(MAT_1 - MAT_2))
library(matrixStats)
#sd_diff_MAT_m <- round(sqrt(sd(data$MAT_1[data$sex == "m"])^2 + sd(data$MAT_2[data$sex == "m"])^2),2)
data <- as.data.table(data)
library(data.table)
#sd_diff_MAT_m <- round(sqrt(sd(data$MAT_1[data$sex == "m"])^2 + sd(data$MAT_2[data$sex == "m"])^2),2)
data <- as.data.table(data)
data[, sd_diff_MAT_m := sd(MAT_1 - MAT_2)]
dat
data
## ICC
ICC(data[c("MAT_1", "MAT_2")]) #ICC MAT for all n
library(rio)
library(tidyverse)
library(psych)
# Set working directory to source file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- import("CRF_performance_data_csv.csv")
summary(data)
View(data)
sum(is.na(data)) # 0
## Set categorical data as factors
data$sex <- factor(data$sex, levels = c(0,1), labels = c("w", "m"))
table(data$sex)
ICC(data_m[c("MAT_1","MAT_2")]) #ICC of MAT for men
ICC(data[c("IAT_1", "IAT_2")]) # ICC IAT
##PPMCC
plot(data$mean_IAT, data$mean_MAT) # auch ansehen...
cor.test(data$mean_IAT, data$mean_MAT, use = "pairwise.complete.obs", method = "pearson")
## 95% limit of agreement (LOA) of MAT - absolute reliability
LOA_MAT_CI_lower <- round(mean(data$diff_MAT) - 1.96*sd(data$diff_MAT),2) # 95LOA lower confidence interval
LOA_MAT_CI_upper <- round(mean(data$diff_MAT) + 1.96*sd(data$diff_MAT),2) # 95%LOA upper confidence interval
LOA_MAT_CI_lower_m <- round(mean(data_m$diff_MAT) - 1.96*sd(data_m$diff_MAT),2) # 95&LOA lower CI for men
LOA_MAT_CI_upper_m <- round(mean(data_m$diff_MAT) + 1.96*sd(data_m$diff_MAT),2) # 95%LOA upper CI for men
LOA_MAT_CI_lower_w <- round(mean(data_w$diff_MAT) - 1.96*sd(data_w$diff_MAT),2) # 95&LOA lower CI for women
LOA_MAT_CI_upper_w <- round(mean(data_w$diff_MAT) + 1.96*sd(data_w$diff_MAT),2) # 95%LOA upper CI for women
library(ggplot2)
ggplot(data, aes(x = mean_MAT, y = diff_MAT)) +
geom_point(size=2) +
geom_hline(yintercept = mean_diff_MAT) +
geom_hline(yintercept = LOA_MAT_CI_lower, color = "red", linetype="dashed") +
geom_hline(yintercept = LOA_MAT_CI_upper, color = "red", linetype="dashed") +
ggtitle("Bland-Altman Plot of MAT") +
ylab("Difference Between Measurements") +
xlab("Average Measurement") +
coord_cartesian(xlim = c(5, 8), ylim = c(-1, 1)) +
theme(plot.title = element_text(hjust = 0.5)) # zentrieren
####Masterthesis - back to sport - Agility T-Test
#setwd("~/Physio/MAS/Masterthesis/Results")
library(rio)
library(tidyverse)
library(psych)
# Set working directory to source file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data <- import("CRF_performance_data_csv.csv")
summary(data)
View(data)
sum(is.na(data)) # 0
## Set categorical data as factors
data$sex <- factor(data$sex, levels = c(0,1), labels = c("w", "m"))
table(data$sex)
data$levelOfSport <- factor(data$levelOfSport, levels = c(1,2,3), labels = c("amateur", "competitive", "top"))
table(data$levelOfSport)
data$test_1 <- factor(data$test_1, levels = c(0,1), labels = c("MAT", "IAT"))
table(data$test_1)
data$test_2 <- factor(data$test_2, levels = c(0,1), labels = c("MAT", "IAT"))
table(data$test_2)
#create col diff_MAT
data$diff_MAT <- data$MAT_1 - data$MAT_2
## data long
#data_long <- data %>%
#  dplyr::select(MAT_1, MAT_2, IAT_1, IAT_2, mean_MAT, mean_IAT) %>%
#  pivot_longer(everything(), names_to = "testName",  values_to = "result")
## data for men and women separated
data_w <- data %>% filter(sex == "w")
data_m <- data %>% filter(sex == "m")
##Physical characteristics of all n
# age
(mean_age <- round(mean(data$age),1))
mean_age_sd <- round(sd(data$age, na.rm = TRUE),1)
#height
mean_height <- round(mean(data$height_cm),1)
mean_height_sd <- round(sd(data$height_cm, na.rm = TRUE),1)
#body mass
mean_bodyMass <- round(mean(data$bodyMass_kg),1)
mean_bodyMass_sd <- round(sd(data$bodyMass_kg, na.rm = TRUE),1)
##bmi
mean_bmi <- round(mean(data$bmi),1)
mean_bmi_sd <- round(sd(data$bmi, na.rm = TRUE),1)
## Physical characteristics (mean & standard deviation) by group (women, men)
#age
age_sex <- data %>% group_by(sex) %>% summarise_at(vars(age), list(mean = mean, sd = sd)) %>% as.data.frame()
round(age_sex$mean,1)
round(age_sex$sd,1)
#height
height_sex <- data %>%  group_by(sex) %>% summarise_at(vars(height_cm), list(mean = mean, sd = sd)) %>% as.data.frame()
round(height_sex$mean,1)
round(height_sex$sd,1)
#body mass
bodymass_sex <- data %>%  group_by(sex) %>% summarise_at(vars(bodyMass_kg), list(mean = mean, sd = sd)) %>% as.data.frame()
round(bodymass_sex$mean,1)
round(bodymass_sex$sd,1)
#bmi
bmi_sex <- data %>%  group_by(sex) %>% summarise_at(vars(bmi), list(mean = mean, sd = sd)) %>% as.data.frame()
round(bmi_sex$mean,1)
round(bmi_sex$sd,1)
##plots n-structure
boxplot(data$bmi, xlab = "BMI")
hist(data$age, probability = TRUE)
boxplot(data$age, xlab = "age") # outlier, should at least be mentioned somewhere.
# one could also try to do the analysis without this subject and see what changes.
which(data$age > 60) # participant 6
barplot(table(data$sex, data$levelOfSport), legend = TRUE, xlab = "Level of sport")
## MAT results: mean and SD and mean difference
mean_MAT_1 <- round(mean(data$MAT_1),2) #mean of MAT_1
sd_MAT_1 <- round(sd(data$MAT_1),2) #SD of MAT_1
mean_MAT_2 <- round(mean(data$MAT_2),2) #mean of MAT_2
sd_MAT_2 <- round(sd(data$MAT_2),2) #SD of MAT_2
mean_diff_MAT <- round(mean(data$diff_MAT),2) # mean of MAT_difference
sd_diff_MAT <- round(sqrt(sd(data$MAT_1)^2 + sd(data$MAT_2)^2),2) # SD of mean difference MAT
# glaube, da wurde nicht diff_MAT genommen, dürfte ein Fehler sein!?
# MAT_1 mean and sd by sex
mean_MAT_1 <- data %>%  group_by(sex) %>% summarise_at(vars(MAT_1), list(mean = mean, sd = sd)) %>% as.data.frame()
round(mean_MAT_1$mean,2)
round(mean_MAT_1$sd,2)
# MAT_2 mean and sd by sex
mean_MAT_2 <- data %>%  group_by(sex) %>% summarise_at(vars(MAT_2), list(mean = mean, sd = sd)) %>% as.data.frame()
round(mean_MAT_2$mean,2)
round(mean_MAT_2$sd,2)
# MAT_diff (mean and sd) by sex
mean(data$MAT_1[data$sex == "w"] - data$MAT_2[data$sex == "w"]) # =(MAT1 + MAT2)/2
mean_diff_MAT_m <- round(mean(data$MAT_1[data$sex == "w"]) - mean(data$MAT_2[data$sex == "w"]),2)  ## mean difference of MAT for women
sd_diff_MAT_m <- round(sqrt(sd(data$MAT_1[data$sex == "w"])^2 + sd(data$MAT_2[data$sex == "w"])^2),2) # SD of mean difference of MAT for women
(sd_diff_MAT_m <- sd(data$MAT_1[data$sex == "w"] - data$MAT_2[data$sex == "w"]))
#data %>% filter(sex == "w") %>% mutate(sd_diff_MAT_m = sd(MAT_1 - MAT_2))
library(matrixStats)
library(data.table)
mean_diff_MAT_m <- round(mean(data$MAT_1[data$sex == "m"]) - mean(data$MAT_2[data$sex == "m"]),2) ## mean difference of MAT for men
#sd_diff_MAT_m <- round(sqrt(sd(data$MAT_1[data$sex == "m"])^2 + sd(data$MAT_2[data$sex == "m"])^2),2)
data <- as.data.table(data)
#data[, sd_diff_MAT_m := sd(MAT_1 - MAT_2)]
# auch hier wurde nicht diff genommen bei sd?
# und: woher stammt die Formel für sd_diff_MAT_n? Sollte das eine gepoolte Varianz sein?
## ICC
ICC(data[c("MAT_1", "MAT_2")]) #ICC MAT for all n
##Scatterplot of mean MAT and IAT
ggplot(data, aes(x = mean_MAT, y = mean_IAT))+
geom_point(size=2)+
ggtitle("Scatterplot of MAT and IAT") +
ylab("mean IAT") +
xlab("mean MAT") +
coord_cartesian(xlim = c(5, 8), ylim = c(15, 20))
##Scatterplot of MAT_1 and MAT_2
MAT_lm <- lm(MAT_2 ~ MAT_1, data = data) # das ist einfach ein t-Test
summary(MAT_lm)
ggplot(data, aes(x = MAT_1, y = MAT_2))+
geom_point(size=2)+
geom_abline(aes(intercept = 0.3495, slope = 0.9263), color = "blue")+ # das geht auch mit geom_smoot(method = "lm")
ggtitle("Scatterplot of MAT trial 1 and 2") +
ylab("MAT trial 2") +
xlab("MAT trial 1") +
coord_cartesian(xlim = c(5, 8), ylim = c(5, 8))
## ICC
ICC(data[c("MAT_1", "MAT_2")]) #ICC MAT for all n
ICC(data[c("MAT_1","MAT_2")]) #ICC of MAT for women
# Fehler? data_w ...
identical(ICC(data[c("MAT_1", "MAT_2")]), ICC(data[c("MAT_1","MAT_2")])) # true
ICC(data_m[c("MAT_1","MAT_2")]) #ICC of MAT for men
ICC(data[c("IAT_1", "IAT_2")]) # ICC IAT
##PPMCC (normal correlation, Pearson)
plot(data$mean_IAT, data$mean_MAT) # auch ansehen...
cor.test(data$mean_IAT, data$mean_MAT, use = "pairwise.complete.obs", method = "pearson")
## 95% limit of agreement (LOA) of MAT - absolute reliability
LOA_MAT_CI_lower <- round(mean(data$diff_MAT) - 1.96*sd(data$diff_MAT),2) # 95LOA lower confidence interval
LOA_MAT_CI_upper <- round(mean(data$diff_MAT) + 1.96*sd(data$diff_MAT),2) # 95%LOA upper confidence interval
LOA_MAT_CI_lower_m <- round(mean(data_m$diff_MAT) - 1.96*sd(data_m$diff_MAT),2) # 95&LOA lower CI for men
LOA_MAT_CI_upper_m <- round(mean(data_m$diff_MAT) + 1.96*sd(data_m$diff_MAT),2) # 95%LOA upper CI for men
LOA_MAT_CI_lower_w <- round(mean(data_w$diff_MAT) - 1.96*sd(data_w$diff_MAT),2) # 95&LOA lower CI for women
LOA_MAT_CI_upper_w <- round(mean(data_w$diff_MAT) + 1.96*sd(data_w$diff_MAT),2) # 95%LOA upper CI for women
library(ggplot2)
ggplot(data, aes(x = mean_MAT, y = diff_MAT)) +
geom_point(size=2) +
geom_hline(yintercept = mean_diff_MAT) +
geom_hline(yintercept = LOA_MAT_CI_lower, color = "red", linetype="dashed") +
geom_hline(yintercept = LOA_MAT_CI_upper, color = "red", linetype="dashed") +
ggtitle("Bland-Altman Plot of MAT") +
ylab("Difference Between Measurements") +
xlab("Average Measurement") +
coord_cartesian(xlim = c(5, 8), ylim = c(-1, 1)) +
theme(plot.title = element_text(hjust = 0.5)) # zentrieren
# library("reshape2")
library(tidyverse)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
specificity <- 0.999
sensitivity <- 0.9652
tests_per_day <- 500000
prevalence <- seq(0.005, 0.15, by = 0.001)
TN <- tests_per_day*(1-prevalence)*specificity
FP <- tests_per_day*(1-prevalence)*(1-specificity)
FN <- tests_per_day*prevalence*(1-sensitivity)
TP <- tests_per_day*prevalence*sensitivity
MCE <- (FP+FN)/(TN+FP+FN+TP)
PPV <- TP/(TP+FP)
NPV <- TN/(FN+TN)
FPR <- FP/(TP+FP)
dat <- tibble(prevalence = prevalence, TN = TN, FP = FP, FN = FN, TP = TP)
dat_long <- melt(dat, id = "prevalence")  # convert to long format
ggplot(data=dat_long,
aes(x=prevalence, y=value, colour=variable)) +
geom_line()
dat1 <- tibble(prevalence = prevalence,PPV=PPV, FPR=FPR)
dat1_long <- melt(dat1, id="prevalence")  # convert to long format
ggplot(data=dat1_long,
aes(x=prevalence, y=value, colour=variable)) +
geom_line() +
ggtitle(paste0("Roche SARS-CoV-2 Rapid Antigen Test: Positive Predictive Value (PPV) and False Positive Rate (FPR), ", "Specificity= ", specificity, ", Sensitivity= ", sensitivity))+
xlab("Disease Prevalence") +
ylab("Value")
dat <- tibble(prevalence = prevalence, TN = TN, FP = FP, FN = FN, TP = TP)
dat_long <- melt(dat, id = "prevalence")  # convert to long format
ggplot(data=dat_long,
aes(x=prevalence, y=value, colour=variable)) +
geom_line()
specificity <- 0.99
sensitivity <- 0.95
prevalence <- seq(0.005, 0.15, by = 0.001)
TN <- (1-prevalence)*specificity
FP <- (1-prevalence)*(1-specificity)
FN <- prevalence*(1-sensitivity)
TP <- prevalence*sensitivity
MCE <- (FP+FN)/(TN+FP+FN+TP)
PPV <- TP/(TP+FP)
NPV <- TN/(FN+TN)
FPR <- FP/(TP+FP)
LR_pos <- sensitivity/(1 - specificity)
(LR_pos <- sensitivity/(1 - specificity))
(LR_neg <- (1-sensitivity)/specificity)
