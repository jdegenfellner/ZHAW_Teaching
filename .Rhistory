mutate(LBDHDDSI_quintile = ntile(LBDHDDSI, 5)) %>%  # Create quintiles for HDL-Cholesterol (mmol/L)
ggplot(aes(x = as.factor(LBDHDDSI_quintile), y = SRI_no_imputation)) +
geom_boxplot(fill = "lightblue") +  # Create boxplots for each quintile
geom_jitter(color = "blue", alpha = 0.5, width = 0.2) +  # Add jitter to the data points
stat_summary(fun = median, geom = "text", aes(label = round(..y.., 1)),
vjust = -0.5, color = "red") +  # Annotate the medians
labs(title = "SRI_no_imputation by Quintiles of Direct HDL-Cholesterol (mmol/L)",
x = "Direct HDL-Cholesterol Quintiles (mmol/L)",
y = "SRI_no_imputation") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# BMI and Age----
df %>%
filter(BMXBMI < 60) %>%
dplyr::select(RIDAGEYR, BMXBMI) %>%
na.omit() %>%
ggplot(aes(x = RIDAGEYR, y = BMXBMI)) +
geom_point(color = "black", alpha = 0.8) +
geom_smooth(method="lm",color = "red", se = TRUE) +
stat_cor(aes(label = paste("Pearson: ", ..r.label..)), method = "pearson", size = 5, vjust = 1) +
stat_cor(aes(label = paste("Spearman: ", ..r.label..)), method = "spearman", size = 5, vjust = 3) +
stat_regline_equation(aes(label = paste(..eq.label.., ..adj.rr.label.., sep = "~~~")),
formula = y ~ x, size = 5, color = "blue") +
labs(x = "Age (years)", y = "BMI") +
ggtitle("Relationship between Age and BMI") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# BMI and Sex----
df %>%
filter(BMXBMI < 60) %>%
mutate(RIAGENDR = as.factor(RIAGENDR)) %>%
ggplot(aes(x = RIAGENDR, y = BMXBMI)) +
geom_boxplot(fill = "lightblue", color = "black") +
stat_summary(fun = median, geom = "text", aes(label = round(..y.., 1)),
vjust = -0.5, color = "red") +  # Annotate medians
labs(x = "Sex (1 = Male, 2 = Female)", y = "BMI") +
ggtitle("BMI Distribution by Sex") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# BMI and Ethnicity------
custom_labels <- c("1" = "Mexican American",
"2" = "Other Hispanic",
"3" = "Non-Hispanic White",
"4" = "Non-Hispanic Black",
"6" = "Non-Hispanic Asian",
"7" = "Other Race - Including Multi-Racial")
df %>%
filter(BMXBMI < 60) %>%
mutate(RIDRETH3 = factor(RIDRETH3, levels = names(custom_labels))) %>%
ggplot(aes(x = RIDRETH3, y = BMXBMI)) +
geom_boxplot(fill = "lightblue", color = "black") +
scale_x_discrete(labels = custom_labels) +
stat_summary(fun = median, geom = "text", aes(label = round(..y.., 1)),
vjust = -0.5, color = "red") +  # Annotate medians
labs(title = "BMI by Ethnicity",
x = "Ethnicity",
y = "BMI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5))
# BMI and Education----
education_labels <- c(
"1" = "Less than 9th grade",
"2" = "9-11th grade (No diploma)",
"3" = "High school graduate/GED",
"4" = "Some college or AA degree",
"5" = "College graduate or above"
)
df %>%
filter(BMXBMI < 60) %>%
filter(!DMDEDUC2 %in% c("7", "9", ".")) %>%
mutate(DMDEDUC2 = factor(DMDEDUC2, levels = names(education_labels))) %>%
ggplot(aes(x = DMDEDUC2, y = BMXBMI)) +
geom_boxplot(fill = "lightblue", color = "black") +
scale_x_discrete(labels = education_labels) +
stat_summary(fun = median, geom = "text", aes(label = round(..y.., 1)),
vjust = -0.5, color = "red") +  # Annotate medians
labs(title = "BMI by Education Level",
x = "Education Level",
y = "BMI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5))
# BMI and depression----
df %>%
mutate(across(c(DPQ010, DPQ020, DPQ030, DPQ040, DPQ050, DPQ060, DPQ070, DPQ080, DPQ090),
~ ifelse(. %in% c(7, 9), NA, .))) %>%
mutate(Depression_score_PHQ_9 = DPQ010 + DPQ020 + DPQ030 + DPQ040 +
DPQ050 + DPQ060 + DPQ070 + DPQ080 + DPQ090) %>%
filter(!is.na(Depression_score_PHQ_9)) %>%
filter(BMXBMI < 60) %>%
ggplot(aes(x = Depression_score_PHQ_9, y = BMXBMI)) +
geom_point(color = "blue", alpha = 0.5) +
geom_smooth(method="lm",color = "red", se = TRUE) +
stat_cor(method = "pearson", aes(label = paste(..r.label.., sep = "~`,`~")),
label.x = 20, label.y = 45) +  # Pearson correlation coefficient
stat_regline_equation(label.x = 20, label.y = 40, aes(label = ..eq.label..)) +  # Regression equation
labs(title = "Relationship between Depression Score (PHQ-9) and BMI",
x = "Depression Score (PHQ-9)",
y = "BMI") +
theme_minimal() +
theme(plot.title = element_text(hjust = 0.5))
# BMI and blod pressure----
df_bp <- df %>%
rowwise() %>%
mutate(
Avg_Systolic_BP = mean(c(BPXSY1, BPXSY2, BPXSY3, BPXSY4), na.rm = TRUE),
Avg_Diastolic_BP = mean(c(BPXDI1, BPXDI2, BPXDI3, BPXDI4), na.rm = TRUE)
) %>%
ungroup()
# Systolic Blood Pressure vs BMI
ggplot(df_bp, aes(x = Avg_Systolic_BP, y = BMXBMI)) +
geom_point(color = "blue", alpha = 0.5) +
geom_smooth(se = TRUE, color = "red") +
labs(title = "BMI vs Average Systolic Blood Pressure",
x = "Average Systolic Blood Pressure (mm Hg)",
y = "BMI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5))
# Diastolic Blood Pressure vs BMI
ggplot(df_bp, aes(x = Avg_Diastolic_BP, y = BMXBMI)) +
geom_point(color = "green", alpha = 0.5) +
geom_smooth(se = TRUE, color = "red") +
labs(title = "BMI vs Average Diastolic Blood Pressure",
x = "Average Diastolic Blood Pressure (mm Hg)",
y = "BMI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5))
df %>%
filter(!is.na(DIQ010)) %>%
mutate(DIQ010 = factor(DIQ010, levels = c(1, 3, 2), labels = c("Yes", "Borderline", "No"))) %>%
ggplot(aes(x = DIQ010, y = BMXBMI)) +
geom_boxplot(fill = "lightblue", color = "black") +
stat_summary(fun = median, geom = "text", aes(label = round(..y.., 1)),
vjust = -0.5, color = "red") +  # Annotate medians
labs(title = "BMI by Diabetes Diagnosis",
x = "Diabetes Diagnosis",
y = "BMI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5))
# BMI and smoking----
# Current Smoking Status (SMQ040)
df %>%
filter(SMQ040 %in% c(1, 2, 3)) %>%
mutate(SMQ040 = factor(SMQ040, levels = c(1, 2, 3), labels = c("Every day", "Some days", "Not at all"))) %>%
ggplot(aes(x = SMQ040, y = BMXBMI)) +
geom_boxplot(fill = "lightblue", color = "black") +
stat_summary(fun = median, geom = "text", aes(label = round(..y.., 1)),
vjust = -0.5, color = "red") +  # Annotate medians
labs(title = "BMI by Smoking Status",
x = "Smoking Status",
y = "BMI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5))
# Cigarettes per Day (SMD650)
df %>%
filter(SMD650 %in% 2:90) %>%  # Cigarettes per day range
filter(!is.na(SMD650)) %>%
ggplot(aes(x = SMD650, y = BMXBMI)) +
geom_point(color = "purple", size = 2, alpha = 0.6) +  # Scatter plot
geom_smooth(se = TRUE, color = "red") +  # Add a regression line
labs(title = "BMI by Average Number of Cigarettes/Day",
x = "Cigarettes/Day",
y = "BMI") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
plot.title = element_text(hjust = 0.5))
# Rescaling of the SRI----
# Phillips et al. 2017 scientific reports:
# y=200*(x-0.5)
x <- c(0,1)
# y=
200*(x-0.5) # -100, 100
# 3) Modeling exploration----
# _Try 0---------
mod <- lm(log(BMXBMI) ~ SRI_no_imputation + RIDAGEYR + RIAGENDR,
data = df %>%
filter(SRI_no_imputation > -10) %>%
filter(BMXBMI < 60) %>%
mutate(RIAGENDR = as.factor(RIAGENDR)))
df %>%
filter(SRI_no_imputation > -10) %>%
filter(BMXBMI < 60) %>%
ggplot(aes(x = log(BMXBMI))) +
geom_histogram() # skewed without log
summary(mod) # almost NO variability explained by the model!!! 2%
# Coefficients seem to be practically zero: 100 points difference in SRI would be a 0.2 difference in BMI, so practically zero according to this simple model
check_model(mod) # Rather nice I would say, PPC could be slightly improved
hist(residuals(mod))
plot(residuals(mod)) # no apparent structure apart from the skewed nature
qqPlot(residuals(mod)) # some departure visible
# with SRI maximize
mod_SRI_maximize <- lm(log(BMXBMI) ~ SRI_maximize + RIDAGEYR + RIAGENDR,
data = df %>%
filter(SRI_maximize > -10) %>%
filter(BMXBMI < 60) %>%
mutate(RIAGENDR = as.factor(RIAGENDR)))
df %>%
filter(SRI_maximize > -10) %>%
filter(BMXBMI < 60) %>%
ggplot(aes(x = log(BMXBMI))) +
geom_histogram() # skewed without log
summary(mod_SRI_maximize) # almost NO variability explained by the model!!! 2%
# Coefficients very similar...
check_model(mod_SRI_maximize) # Rather nice I would say.
hist(residuals(mod_SRI_maximize))
plot(residuals(mod_SRI_maximize)) # no apparent structure apart from the skewed nature
qqPlot(residuals(mod_SRI_maximize)) # some departure visible
# SRI minimize
mod_SRI_minimize <- lm(log(BMXBMI) ~ SRI_minimize + RIDAGEYR + RIAGENDR,
data = df %>%
filter(SRI_minimize > -10) %>%
filter(BMXBMI < 60) %>%
mutate(RIAGENDR = as.factor(RIAGENDR)))
df %>%
filter(SRI_minimize > -10) %>%
filter(BMXBMI < 60) %>%
ggplot(aes(x = log(BMXBMI))) +
geom_histogram(fill = "lightblue", color = "black") +
labs(title = "Histogram of log(BMXBMI) with SRI_minimize",
x = "log(BMXBMI)",
y = "Frequency") +
theme_minimal()
summary(mod_SRI_minimize)
check_model(mod_SRI_minimize) # very nice
# _Try 1----
mod1 <- lm(log(BMXBMI) ~ SRI_no_imputation +
RIDAGEYR + # Age in years
RIAGENDR + # Gender
DMDMARTL + # Marital status
DMDEDUC2 +  # Education level
INDHHIN2, # Household income
data = df %>%
filter(SRI_no_imputation > -10) %>%
filter(BMXBMI < 60) %>%
filter(DMDMARTL %nin% c(77,99)) %>%
mutate(DMDMARTL = as.factor(DMDMARTL)) %>%
filter(DMDEDUC2 %nin% c(7,9)) %>%
mutate(DMDEDUC2 = as.factor(DMDEDUC2)) %>%
mutate(INDHHIN2 = as.factor(INDHHIN2)) %>%
filter(!INDHHIN2 %in% c("77", "99", ".")) %>%
filter(!is.na(INDHHIN2))
)
summary(mod1) # Still, explains very few variability (4.2%) of BMI
check_model(mod1) # still good
hist(residuals(mod1)) # very symmetric
plot(residuals(mod1)) # nice
mean(residuals(mod1)) # 0
# _Try 2----
reg_fit <- regsubsets(log(BMXBMI) ~ SRI_no_imputation + RIDAGEYR + RIAGENDR +
RIDRETH3 + Depression_score_PHQ_9 + ALQ130 + SMD650 +
LBDHDDSI, # add more covariates
data = df %>%
mutate(across(c(DPQ010, DPQ020, DPQ030, DPQ040, DPQ050, DPQ060, DPQ070, DPQ080, DPQ090),
~ ifelse(. %in% c(7, 9), NA, .))) %>%  # Replace 7 and 9 with NA
mutate(Depression_score_PHQ_9 = DPQ010 + DPQ020 + DPQ030 + DPQ040 +
DPQ050 + DPQ060 + DPQ070 + DPQ080 + DPQ090) %>%
filter(BMXBMI < 60),
nvmax = 10)
summary(reg_fit)
plot(reg_fit, scale = "bic")
# _Try 3----
hist(df$BMXBMI[df$BMXBMI < 60])
mod <- lm(log(BMXBMI) ~ SRI_no_imputation + # SRI, not imputed
RIDAGEYR + # age in years
RIAGENDR + # gender
RIDRETH3 + # ethnicity
Depression_score_PHQ_9 + # PHQ-9 score
LBDHDDSI +
Avg_Systolic_BP,
data = df %>%
mutate(across(c(DPQ010, DPQ020, DPQ030, DPQ040, DPQ050, DPQ060, DPQ070, DPQ080, DPQ090),
~ ifelse(. %in% c(7, 9), NA, .))) %>%  # Replace 7 and 9 with NA
mutate(Depression_score_PHQ_9 = DPQ010 + DPQ020 + DPQ030 + DPQ040 +
DPQ050 + DPQ060 + DPQ070 + DPQ080 + DPQ090) %>%
filter(BMXBMI < 60) %>%
rowwise() %>%
mutate(
Avg_Systolic_BP = mean(c(BPXSY1, BPXSY2, BPXSY3, BPXSY4), na.rm = TRUE),
Avg_Diastolic_BP = mean(c(BPXDI1, BPXDI2, BPXDI3, BPXDI4), na.rm = TRUE)
) %>%
ungroup())
summary(mod) # 15.4% of variability explained
check_model(mod) # rather nice!
plot(residuals(mod))
summary(mod) # 15.4% of variability explained
# Load necessary libraries
library(ggplot2)
library(broom)
library(dplyr)
# Extract residuals using broom::augment()
residuals_df <- augment(mod)
# Create a residuals plot
ggplot(residuals_df, aes(.fitted, .resid)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", col = "red", se = FALSE) +
theme_minimal() +
labs(
title = "Residuals vs Fitted",
x = "Fitted Values",
y = "Residuals"
) +
theme(
plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
axis.title = element_text(size = 14),
axis.text = element_text(size = 12)
)
library(patchwork)
# Create residuals plot and QQ plot
p1 <- ggplot(residuals_df, aes(.fitted, .resid)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", col = "blue", se = FALSE) +
theme_minimal() +
labs(
title = "Residuals vs Fitted",
x = "Fitted Values",
y = "Residuals"
)
p2 <- ggplot(residuals_df, aes(sample = .resid)) +
stat_qq() +
stat_qq_line() +
theme_minimal() +
labs(
title = "QQ Plot of Residuals",
x = "Theoretical Quantiles",
y = "Sample Quantiles"
)
# Combine both plots using patchwork
p1 + p2 + plot_layout(ncol = 2)
# _Try 4.1 ----
library(rms)
library(MASS)
# Note, that rlm does not show much more normality
mod_spline <- lm(BMXBMI_log ~ rcs(RIDAGEYR, 4) + # Spline for Age with 4 knots
rcs(Depression_score_PHQ_9, 4) + # Spline for Depression Score
rcs(SRI_no_imputation,4) + # SRI, not imputed
RIAGENDR + # gender
RIDRETH3 + # ethnicity
rcs(LBDHDDSI,4) + # HDL cholesterol
rcs(Avg_Systolic_BP,4) +
DIQ010 + # diabetes
rcs(LBXVIDMS,4) + # Vitamin D
ALQ130 + # alcohol
SMQ040, # smoking
data = df %>%
mutate(across(c(DPQ010, DPQ020, DPQ030, DPQ040, DPQ050, DPQ060, DPQ070, DPQ080, DPQ090),
~ ifelse(. %in% c(7, 9), NA, .))) %>%  # Replace 7 and 9 with NA
mutate(Depression_score_PHQ_9 = DPQ010 + DPQ020 + DPQ030 + DPQ040 +
DPQ050 + DPQ060 + DPQ070 + DPQ080 + DPQ090) %>%
filter(BMXBMI < 60) %>%
filter(SRI_no_imputation > -10) %>%
rowwise() %>%
mutate(
Avg_Systolic_BP = mean(c(BPXSY1, BPXSY2, BPXSY3, BPXSY4), na.rm = TRUE),
Avg_Diastolic_BP = mean(c(BPXDI1, BPXDI2, BPXDI3, BPXDI4), na.rm = TRUE)
) %>%
ungroup() %>%
mutate(BMXBMI_log = log(BMXBMI)) %>%
filter(LBXVIDMS < 250) %>%
filter(SMQ040 %in% c(1, 2, 3)) %>%
filter(ALQ130 %in% 1:82))
summary(mod_spline) # ~ 25% of variability explained
check_model(mod_spline) # Check diagnostics, no green lines for rlm()
check_model(mod_spline, check = "pp_check") # slightly off
plot(residuals(mod_spline)) # residuals look good
residuals_df <- data.frame(
.fitted = fitted(mod_spline),
.resid = residuals(mod_spline)
)
library(car)
qqPlot(mod_spline, main = "QQ Plot with Confidence Intervals") # slightly off, but better than the smaller models I think
influence_points <- cooks.distance(mod_spline)
high_influence <- which(influence_points > 4 / nrow(df))  # Common threshold for Cook's distance
df[high_influence, ]
# Residuals vs Fitted plot
p1 <- ggplot(residuals_df, aes(.fitted, .resid)) +
geom_point(alpha = 0.5) +
geom_smooth(method = "loess", col = "blue", se = FALSE) +
theme_minimal() +
labs(
title = "Residuals vs Fitted",
x = "Fitted Values",
y = "Residuals"
)
# QQ Plot of Residuals
p2 <- ggplot(residuals_df, aes(sample = .resid)) +
stat_qq() +
stat_qq_line() +
theme_minimal() +
labs(
title = "QQ Plot of Residuals",
x = "Theoretical Quantiles",
y = "Sample Quantiles"
)
p1 + p2 + plot_layout(ncol = 2)
# _Try4 without splines----
mod_no_spline <- lm(BMXBMI_log ~ RIDAGEYR +
Depression_score_PHQ_9 +
SRI_no_imputation +
RIAGENDR +
RIDRETH3 +
LBDHDDSI +
Avg_Systolic_BP +
DIQ010 +
LBXVIDMS +
ALQ130 +
SMQ040,
data = df %>%
mutate(across(c(DPQ010, DPQ020, DPQ030, DPQ040, DPQ050, DPQ060, DPQ070, DPQ080, DPQ090),
~ ifelse(. %in% c(7, 9), NA, .))) %>%  # Replace 7 and 9 with NA
mutate(Depression_score_PHQ_9 = DPQ010 + DPQ020 + DPQ030 + DPQ040 +
DPQ050 + DPQ060 + DPQ070 + DPQ080 + DPQ090) %>%
filter(BMXBMI < 60) %>%
filter(SRI_no_imputation > -10) %>%
rowwise() %>%
mutate(
Avg_Systolic_BP = mean(c(BPXSY1, BPXSY2, BPXSY3, BPXSY4), na.rm = TRUE),
Avg_Diastolic_BP = mean(c(BPXDI1, BPXDI2, BPXDI3, BPXDI4), na.rm = TRUE)
) %>%
ungroup() %>%
mutate(BMXBMI_log = log(BMXBMI)) %>%
filter(LBXVIDMS < 250) %>%
filter(SMQ040 %in% c(1, 2, 3)) %>%
filter(ALQ130 %in% 1:82))
summary(mod_no_spline) # Adjusted R-squared:  0.2225
check_model(mod_no_spline) # slightly worse model fit, but on the surface it looks quite good
check_model(mod_no_spline, check = "pp_check") # slightly off, not worse than with splines
plot(residuals(mod_spline)) # residuals look good
# TODO: Interaction effects?----
# Load library
library(MASS)
# Fit a full model with interaction terms
full_model <- lm(BMXBMI_log ~ (RIDAGEYR + Depression_score_PHQ_9 + SRI_no_imputation +
RIAGENDR + RIDRETH3 + LBDHDDSI + Avg_Systolic_BP +
DIQ010 + LBXVIDMS + ALQ130 + SMQ040)^2, data = df %>%
mutate(across(c(DPQ010, DPQ020, DPQ030, DPQ040, DPQ050, DPQ060, DPQ070, DPQ080, DPQ090),
~ ifelse(. %in% c(7, 9), NA, .))) %>%  # Replace 7 and 9 with NA
mutate(Depression_score_PHQ_9 = DPQ010 + DPQ020 + DPQ030 + DPQ040 +
DPQ050 + DPQ060 + DPQ070 + DPQ080 + DPQ090) %>%
filter(BMXBMI < 60) %>%
filter(SRI_no_imputation > -10) %>%
rowwise() %>%
mutate(
Avg_Systolic_BP = mean(c(BPXSY1, BPXSY2, BPXSY3, BPXSY4), na.rm = TRUE),
Avg_Diastolic_BP = mean(c(BPXDI1, BPXDI2, BPXDI3, BPXDI4), na.rm = TRUE)
) %>%
ungroup() %>%
mutate(BMXBMI_log = log(BMXBMI)) %>%
filter(LBXVIDMS < 250) %>%
filter(SMQ040 %in% c(1, 2, 3)) %>%
filter(ALQ130 %in% 1:82))
# Apply stepwise regression
tic()
stepwise_model <- stepAIC(full_model, direction = "both")
toc()
summary(stepwise_model) # Adjusted R-squared:  0.283
check_model(stepwise_model)  # Collinearity bad because of interaction?
check_model(stepwise_model, check = "pp_check") # slightly off, not worse than with splines
plot(residuals(stepwise_model)) # residuals look good
qqPlot(stepwise_model, main = "QQ Plot with Confidence Intervals") # slightly off, but better than the smaller models I think
# Set working directory to source file location
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(pacman)
p_load(plotly, tidyverse)
# Page 5 Script ----
# Let's look at formula (1.2.6) and use data from above
df <- read.csv("https://raw.githubusercontent.com/jdegenfellner/ZHAW_Teaching/main/Data/regressionSimple.csv")
str(df)
df
plot(df$x,df$y)
mod <- lm(y ~ x, data = df) # least squares method.
summary(mod)
sum((mod$fitted.values - df$y)^2) # true minimum of SSE (= sum of squared errors)
sse <- function(alpha, beta, data) {
predicted <- alpha + beta * data$x
sum((data$y - predicted)^2)
}
alpha_values <- seq(-2, 2, length.out = 1000)
beta_values <- seq(-2, 2, length.out = 1000)
sse_values <- outer(alpha_values, beta_values, Vectorize(function(a, b) sse(a, b, df)))
fig <- plot_ly(x = ~alpha_values, y = ~beta_values, z = ~sse_values, type = "surface") %>%
layout(title = "Sum of squared errors depending on alpha and beta")
fig
# Highlight min of this paraboloid (fig)----
min_sse_index <- which(sse_values == min(sse_values), arr.ind = TRUE) # Find indices where error is smallest.
(min_alpha <- alpha_values[min_sse_index[1]])
(min_beta <- beta_values[min_sse_index[2]])
(min_sse <- min(sse_values))
min_alpha # (= Intercept)
min_beta
coef(mod) # match
fig <- fig %>% add_trace(
x = min_beta,
y = min_alpha,
z = min_sse,
type = 'scatter3d',
mode = 'markers',
marker = list(color = 'red', size = 7)
)
fig
# page 6----
A <- c(0, 0.2, 0.5, 0.7, 1, 1.4, 1.8, 2.25, 2.5)
R <- c(554, 581, 589, 628, 623, 687, 692, 734, 812)
ARdata <- data.frame(Alkohol = A, Reaktionszeit = R)
#plot(A,R)
modAR <- lm(R ~ A, data = ARdata) # Regress R on A
modAR
summary(modAR)
